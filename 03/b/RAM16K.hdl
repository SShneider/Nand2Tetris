// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
	DMux4Way(in = load, sel = address[0..1], a = R1, b = R2, c = R3, d = R4);
	RAM4K(in = in, load = R1, address = address[2..13], out = RegOut1);
	RAM4K(in = in, load = R2, address = address[2..13], out = RegOut2);
	RAM4K(in = in, load = R3, address = address[2..13], out = RegOut3);
	RAM4K(in = in, load = R4, address = address[2..13], out = RegOut4);
	Mux4Way16(a = RegOut1, b = RegOut2, c = RegOut3, d = RegOut4, sel = address[0..1], out = out);
 }